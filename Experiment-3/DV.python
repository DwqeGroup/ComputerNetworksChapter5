#!/usr/bin/python
MAX_ROUTER=20
nodes=5
class node:
    dist=[]
    from_=[]

rt=[]
for i in range(0,nodes):
    a=node()
    a.dist=[0,0,0,0,0]
    a.from_=[0,0,0,0,0]
    rt.append(a)

init_table=[ [0,7,10000,10000,10] ,[ 7,0,1,10000 ,8 ],[10000,1,0,2,10000 ],[10000,10000,2,0,2 ], [10,8,10000,2,0 ]]

def init():
    global nodes
    global rt
    global init_table
    for i in range(0,nodes):
        for j in range(0,nodes):
                rt[i].dist[j]=init_table[i][j]
                rt[i].from_[j]=j

def update():
    global nodes
    global rt
    global init_table
    count=1
    while count!=0:
        count=0
        for i in range(0,nodes):
            for j in range(0,nodes):
                for k in range(0,nodes):
                     if rt[i].dist[j]>init_table[i][k]+rt[k].dist[j]:
                        rt[i].dist[j]=rt[i].dist[k]+rt[k].dist[j]
                        rt[i].from_[j]=k
                        count=count+1

def print_table():
    global nodes
    global rt
    for i in range(0,nodes):
        print("\nRouter_table of router ", i + 1)
        for j in range(0,nodes):
            print("\tnode:",j+1 ,"Distance:",rt[i].dist[j],"Next hop:",rt[i].from_[j] + 1)

init()
update()
print_table()

name=input("Input 'c' to change init_table, input other words to exit:")
while name!='c':
    print("Please input three numbers: start_node next_node distance")
    print("Attention: node number should in[0,",nodes,"), distance should in [0,100)")
    print("After input all changes, input any word to end input.")
    lx_=input()
    ly_=input()
    val_=input()
    lx=int(lx_)
    ly=int(ly_)
    val=int(val_)
    if lx<nodes and lx>=0 and ly>=0 and ly<nodes:
        init_table[lx][ly]=val
        init_table[ly][lx]=val
    else:
        print("The node number should between 0 and ",nodes)

    init()
    update()
    print_table()
    name=input("Input 'c' to change init_table, input other words to exit:")
